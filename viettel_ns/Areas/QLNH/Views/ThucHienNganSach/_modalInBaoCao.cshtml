@using Viettel.Domain.DomainModel
@using Viettel.Models.CPNH

<div class="modal-body">
    <div class="form-group row">
        <input type="hidden" id="txtNamKeHoach" value="@ViewBag.iNamKeHoach" />
        <input type="hidden" id="txtPrintsTenDonVi" value="@ViewBag.sTenDonVi" />
        <input type="hidden" id="txtPrinttabTable" value="@ViewBag.tabTable" />
        <input type="hidden" id="txtPrintiTuNam" value="@ViewBag.iTuNam" />
        <input type="hidden" id="txtPrintiDenNam" value="@ViewBag.iDenNam" />
        <input type="hidden" id="txtPrintiDonvi" value="@ViewBag.iDonvi" />
        <input type="hidden" id="txtPrintiQuyList" value="@ViewBag.iQuyList" />
        <input type="hidden" id="txtPrintiNam" value="@ViewBag.iNam" />

        <div class="col-sm-12">
            <label for="txtTieuDe1">Tiêu đề 1</label>
            @Helpers.Required()
            <div>
                <input type="text" required id="txtTieuDe1" class="form-control" maxlength="255" autocomplete="off" />
            </div>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-12">
            <label for="txtTieuDe2">Tiêu đề 2</label>
            @Helpers.Required()
            <div>
                <textarea id="txtTieuDe2" required class="form-control" maxlength="255"></textarea>
            </div>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-6">
            <div>
                <label for="txtDonViCapTren">Đơn vị cấp trên</label>
                @Helpers.Required()
                <div>
                    <input type="text" required id="txtDonViCapTren" class="form-control" maxlength="255" autocomplete="off" />
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div>
                <label for="txtDonViCapDuoi">Đơn vị</label>
                @Helpers.Required()
                <div>
                    <input type="text" required id="txtDonViCapDuoi" class="form-control" maxlength="255" autocomplete="off" />
                </div>
            </div>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-6">
            <div>
                <label for="slbDonViUSD">Đơn vị tính (USD)</label>
                @Helpers.Required()
                <div>
                    <select id="slbDonViUSD" name="slbDonViUSD" class="form-control">
                        @if (ViewBag.ListDVUSD != null)
                        {
                            foreach (var donViUSD in (List<Dropdown_SelectValue>)ViewBag.ListDVUSD)
                            {
                                <option value="@donViUSD.Value">@Html.Raw(donViUSD.Label)</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div>
                <label for="slbDonViVND">Đơn vị tính (VND)</label>
                @Helpers.Required()
                <div>
                    <select id="slbDonViVND" name="slbDonViVND" class="form-control">
                        @if (ViewBag.ListDVVND != null)
                        {
                            foreach (var donViVND in (List<Dropdown_SelectValue>)ViewBag.ListDVVND)
                            {
                                <option value="@donViVND.Value">@Html.Raw(donViVND.Label)</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>
    </div>
    @if (ViewBag.tabTable == 2)
    {
<div class="form-group row">
    @if (ViewBag.iTo >= 1)
    {
        <div class="col-sm-6">
            <div>
                <input type="checkbox" value="1" data-value="1" data-group="To" data-text="Tờ 1" check-group="To" id="To-1" autocomplete="off" onchange="checkItem('To','1', this)"><label for="chkInMotTo">  In tờ một</label>
            </div>
        </div>
    }
    @if (ViewBag.iTo >= 2)
    {
        <div class="col-sm-6">
            <div>
                <input type="checkbox" value="2" data-value="2" data-group="To" data-text="Tờ 2" check-group="To" id="To-2" autocomplete="off" onchange="checkItem('To','2', this)"><label for="chkInMotTo">  In tờ hai</label>
            </div>
        </div>
    }
    @if (ViewBag.iTo >= 3)
    {
        <div class="col-sm-6">
            <div>
                <input type="checkbox" value="3" data-value="3" data-group="To" data-text="Tờ 3" check-group="To" id="To-3" autocomplete="off" onchange="checkItem('To','3', this)"><label for="chkInMotTo">  In tờ ba</label>
            </div>
        </div>
    }
    @if (ViewBag.iTo >= 4)
    {
        <div class="col-sm-6">
            <div>
                <input type="checkbox" value="4" data-value="4" data-group="To" data-text="Tờ 4" check-group="To" id="To-4" autocomplete="off" onchange="checkItem('To','4', this)"><label for="chkInMotTo">  In tờ bốn</label>
            </div>
        </div>
    }
    @if (ViewBag.iTo >= 5)
    {
        <div class="col-sm-6">
            <div>
                <input type="checkbox" value="5" data-value="5" data-group="To" data-text="Tờ 5" check-group="To" id="To-5" autocomplete="off" onchange="checkItem('To','5', this)"><label for="chkInMotTo">  In tờ năm</label>
            </div>
        </div>
    }
    @if (ViewBag.iTo >= 6)
    {
        <div class="col-sm-6">
            <div>
                <input type="checkbox" value="6" data-value="6" data-group="To" data-text="Tờ 6" check-group="To" id="To-6" autocomplete="off" onchange="checkItem('To','6', this)"><label for="chkInMotTo">  In tờ sáu</label>
            </div>
        </div>
    }
    @if (ViewBag.iTo >= 7)
    {
        <div class="col-sm-6">
            <div>
                <input type="checkbox" value="7" data-value="7" data-group="To" data-text="Tờ 7" check-group="To" id="To-7" autocomplete="off" onchange="checkItem('To','7', this)"><label for="chkInMotTo">  In tờ bảy</label>
            </div>
        </div>
    }
    @if (ViewBag.iTo >= 8)
    {
        <div class="col-sm-6">
            <div>
                <input type="checkbox" value="8" data-value="8" data-group="To" data-text="Tờ 8" check-group="To" id="To-8" autocomplete="off" onchange="checkItem('To','8', this)"><label for="chkInMotTo">  In tờ tám</label>
            </div>
        </div>
    }
    @if (ViewBag.iTo >= 9)
    {
        <div class="col-sm-6">
            <div>
                <input type="checkbox" value="9" data-value="9" data-group="To" data-text="Tờ 9" check-group="To" id="To-9" autocomplete="off" onchange="checkItem('To','9', this)"><label for="chkInMotTo">  In tờ chín</label>
            </div>
        </div>
    }
    @if (ViewBag.iTo >= 10)
    {
        <div class="col-sm-6">
            <div>
                <input type="checkbox" value="10" data-value="10" data-group="To" data-text="Tờ 10" check-group="To" id="To-10" autocomplete="off" onchange="checkItem('To','10', this)"><label for="chkInMotTo">  In tờ mười</label>
            </div>
        </div>
    }
</div>
    }

            @Html.Partial("_ui_chuky")
            <div class="modal-footer">
                <div class="text-center">
                    <button class="btn-mvc" id="btnChuKy"><i class="fa fa-file-excel"></i>Sửa chữ ký</button>
                    <button class="btn-mvc btn-mvc-green btn-print" onclick="printBaoCao('pdf')"><span>Xuất file PDF</span></button>
                    <button class="btn-mvc btn-mvc-green btn-print" onclick="printBaoCao('xlsx')"><span>Xuất file Excel</span></button>
                    <button class="btn btn-default" data-dismiss="modal"><i class="fa fa-ban" aria-hidden="true"></i><span>Đóng</span></button>
                </div>
            </div>
            <input type="hidden" id="urlExport" value="@Url.Action("ExportExcelBaoCao", "ThucHienNganSach")" />
            <style>
                .ml-0 {
                    margin-left: 0 !important;
                }

                .w-100 {
                    width: 100%;
                }



                .d-flex {
                    display: flex
                }

                .justify-content-center {
                    justify-content: center
                }
            </style>
